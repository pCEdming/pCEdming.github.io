<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whiting互联网边缘の小屋</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-03T14:06:14.889Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Whiting</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络概论</title>
    <link href="http://example.com/2023/10/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%AE%BA/"/>
    <id>http://example.com/2023/10/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%AE%BA/</id>
    <published>2023-10-03T14:02:28.000Z</published>
    <updated>2023-10-03T14:06:14.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络-自顶向下"><a href="#计算机网络-自顶向下" class="headerlink" title="计算机网络:自顶向下"></a>计算机网络:自顶向下</h1><div class="story post-story"><h2 id="因特网"><a href="#因特网" class="headerlink" title="因特网"></a>因特网</h2><p><strong>因特网就是计算机网络的概称</strong> 通俗来讲就是“网络的网络”</p><h3 id="因特网的构成"><a href="#因特网的构成" class="headerlink" title="因特网的构成"></a>因特网的构成</h3><ul><li>端系统或主机</li><li>通信链路</li><li>因特网服务提供商(ISP)<br>以上结构都要运行多个[[协议]],其中最为重要的协议就是<strong>TCP&#x2F;IP</strong>两个</li></ul></div><div class="story post-story"><h2 id="网络边缘"><a href="#网络边缘" class="headerlink" title="网络边缘"></a>网络边缘</h2><p>我们通常把与因特网相连的计算机成为端系统,它们位于网络边缘</p><h3 id="接入网"><a href="#接入网" class="headerlink" title="接入网"></a>接入网</h3><ul><li>家庭接入:DSL、电缆、 FTTH和5G固定式无线</li><li>企业接入:以太网和Wi-Fi</li><li>广域无线接入:3G、4G</li></ul><h3 id="物理媒介"><a href="#物理媒介" class="headerlink" title="物理媒介"></a>物理媒介</h3><ul><li>双绞铜线</li><li>同轴电缆</li><li>光纤</li><li>陆地无线电信道</li><li>卫星无线电信道</li></ul></div><div class="story post-story"><h2 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h2><ul><li>分组交换<ol><li>存储转发传输</li><li>排队时延和分组丢失</li><li>转发表和路由选择协议</li></ol></li><li>电路交换<br>电路交换网络中的复用</li><li>分组交换和电路交换的对比<br>在我看来: 分组交换的性能好、电路交换的安全性高</li></ul></div><div class="story post-story"><h2 id="分组交换网的时延、丢包和吞吐量"><a href="#分组交换网的时延、丢包和吞吐量" class="headerlink" title="分组交换网的时延、丢包和吞吐量"></a>分组交换网的时延、丢包和吞吐量</h2><h3 id="分组交换中的时延类型"><a href="#分组交换中的时延类型" class="headerlink" title="分组交换中的时延类型"></a>分组交换中的时延类型</h3><ul><li>处理时延</li><li>排队时延</li><li>传输时延</li><li>传播时延</li></ul><h3 id="丢包"><a href="#丢包" class="headerlink" title="丢包"></a>丢包</h3><p>丢包类比一辆长的车队途径检查点</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>吞吐量近似的认为是源与目的地之间路径的最小传输速率</p></div><div class="story post-story"><h2 id="协议层次及其服务模型"><a href="#协议层次及其服务模型" class="headerlink" title="协议层次及其服务模型"></a>协议层次及其服务模型</h2><h3 id="协议分层"><a href="#协议分层" class="headerlink" title="协议分层"></a>协议分层</h3><ul><li>应用层</li><li>运输层</li><li>网络层</li><li>链路层</li><li>物理层</li></ul><h1 id="运输层"><a href="#运输层" class="headerlink" title="运输层"></a>运输层</h1></div><div class="story post-story"><h2 id="运输层概述"><a href="#运输层概述" class="headerlink" title="运输层概述"></a>运输层概述</h2><p>运输层主要是负责应用层和网络层之间的通信,&#x3D;&#x3D;逻辑通信&#x3D;&#x3D;并不是真实的,是通过应用层发送的&#x3D;&#x3D;报文段&#x3D;&#x3D;实现的,在运输层我们主要学习的是&#x3D;&#x3D;UDP(User Datagram Protocol)和TCP(Transmission Control Protocol)&#x3D;&#x3D;</p></div><div class="story post-story"><h2 id="多路复用和多路分解"><a href="#多路复用和多路分解" class="headerlink" title="多路复用和多路分解"></a>多路复用和多路分解</h2><p>这个说白了就是:在应用层和运输层之间的通信都会经过一个套接字,即接口.从网络层来的报文段来到了运输层,现在要运输到应用层,那么就会通过报文段里的一个信息发送到应用层某个应用程序的套接字当中,,,,然后从众多应用程序发送下来的报文段都被打包经运输层发送到网络层,这是多路复用</p></div><div class="story post-story"><h2 id="UDP-无连接运输"><a href="#UDP-无连接运输" class="headerlink" title="UDP:无连接运输"></a>UDP:无连接运输</h2><p>UPD是无连接的,因为在发送报文段之前,发送端与接受段并没有握手🤝,,,UPD是个二元连接,在UDP的报文段结构中得有源端口号和目的端口号,其目的是为了有目标,和到达目标后方便回复<br>UDP是不可靠的,它允许一部分的数据丢失,比如视频通话,被丢包和超时并不需要再次发送,因为这个在视频通话当中是没必要的,,,虽然说UDP是不可靠的,但我感觉还是有一点的,就是检验和,实现了UDP是差错检测功能,但好像也没啥用,检测出来差错之后并没有纠正……文中有说Google通过某项技术实现了UDP上的可靠传输,这是后话了,以后再说</p></div><div class="story post-story"><h2 id="面向连接的TCP"><a href="#面向连接的TCP" class="headerlink" title="面向连接的TCP"></a>面向连接的TCP</h2><p>一个可靠的连接需要考虑的因素非常多,书中也是循循渐进的考虑的,我这里就不过来论述了,都是一个不断改进的过程,其中有:</p><ol><li>通过检验和能检测出传输中的比特错误</li><li>运输层的报文段一般是分段的,那么为每段报文段添加一个序号就好知道哪段丢了</li><li>如果电话那边说的话非常快,接收方没听到,那么就请求再说一遍,如果接受到了那么就确认一下</li><li>最后就是回退N步和选择重传</li></ol></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络-自顶向下&quot;&gt;&lt;a href=&quot;#计算机网络-自顶向下&quot; class=&quot;headerlink&quot; title=&quot;计算机网络:自顶向下&quot;&gt;&lt;/a&gt;计算机网络:自顶向下&lt;/h1&gt;&lt;div class=&quot;story post-story&quot;&gt;&lt;h2 id=&quot;因特网</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="概论" scheme="http://example.com/tags/%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>高精度</title>
    <link href="http://example.com/2023/10/03/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    <id>http://example.com/2023/10/03/%E9%AB%98%E7%B2%BE%E5%BA%A6/</id>
    <published>2023-10-03T13:57:29.000Z</published>
    <updated>2023-10-03T13:58:48.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h1><p>高精度算法是用python或Java是很简单的,这俩好像自带大数操作(恼</p><p>但是我们是C++选手,还是按部就班来~</p><p>高精度一般是有&#x3D;&#x3D;加法、减法、乘法、除法&#x3D;&#x3D;<br>乘法和除法一般是大数和小数</p><p>其本质就是<strong>使用数组模拟我们人类的计算过程</strong></p><div class="story post-story"><h2 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>() || i &lt; B.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; A.<span class="built_in">size</span>()) t += A[i];</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        <span class="comment">//进位</span></span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t) C.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="story post-story"><h2 id="高精度减法"><a href="#高精度减法" class="headerlink" title="高精度减法"></a>高精度减法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;t = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(t &lt; <span class="number">0</span>) t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">return</span> C; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="story post-story"><h2 id="高精度乘法-高-x-低"><a href="#高精度乘法-高-x-低" class="headerlink" title="高精度乘法(高 x 低)"></a>高精度乘法(高 x 低)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        t += A[i] * b;</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t)&#123;</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="story post-story"><h2 id="高精度除法-高-低"><a href="#高精度除法-高-低" class="headerlink" title="高精度除法(高 &#x2F; 低)"></a>高精度除法(高 &#x2F; 低)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,<span class="type">int</span> B)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">        r = r * <span class="number">10</span> + A[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(r / <span class="number">10</span>);</span><br><span class="line">        r %= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(),C,<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高精度&quot;&gt;&lt;a href=&quot;#高精度&quot; class=&quot;headerlink&quot; title=&quot;高精度&quot;&gt;&lt;/a&gt;高精度&lt;/h1&gt;&lt;p&gt;高精度算法是用python或Java是很简单的,这俩好像自带大数操作(恼&lt;/p&gt;
&lt;p&gt;但是我们是C++选手,还是按部就班来~&lt;/p</summary>
      
    
    
    
    <category term="题解" scheme="http://example.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/10/02/hello-world/"/>
    <id>http://example.com/2023/10/02/hello-world/</id>
    <published>2023-10-02T01:45:28.276Z</published>
    <updated>2023-10-03T14:07:04.143Z</updated>
    
    <content type="html"><![CDATA[<h1 id="About"><a href="#About" class="headerlink" title="About"></a>About</h1><div class="story post-story"><h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><ul><li>这个阶段当然是在网络上看到了好多大佬很炫酷的博客,于是萌生出了自己也搞一个的想法,于是就有了这个,当然这看起来好像不是那么炫酷,这个就等后期慢慢开发了,我目前是这么个水平,当前有在学习计算机网络和前端.</li></ul></div><div class="story post-story"><h2 id="Here-is-what"><a href="#Here-is-what" class="headerlink" title="Here is what"></a>Here is what</h2><p>这里是一个个人空间,有在学习计算机相关的知识,目前会更新<strong>数据结构与算法、题解、学习心得、考研相关、英语学习</strong></p><h3 id="Further"><a href="#Further" class="headerlink" title="Further"></a>Further</h3><p>鉴于本人正在学习英语,而且应该是有一些虚荣心作祟(也不好描述,姑且称为虚荣吧)我感觉全英会显得很高级,所以有些我会逐步写一下全英文章</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;About&quot;&gt;&lt;a href=&quot;#About&quot; class=&quot;headerlink&quot; title=&quot;About&quot;&gt;&lt;/a&gt;About&lt;/h1&gt;&lt;div class=&quot;story post-story&quot;&gt;&lt;h2 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
